HOME@DESKTOP-C6S3S5U MINGW64 ~
$ cd c:
우선 c로 들어가서

HOME@DESKTOP-C6S3S5U MINGW64 /c
$ pwd
/c

HOME@DESKTOP-C6S3S5U MINGW64 /c
$ ls
'$Recycle.Bin'/             Intel/                        db_test/
'$WinREAgent'/              OKTAG.BIN                     hiberfil.sys
 202109_yd02/               PerfLogs/                     jswork/
 AMTAG.BIN                 'Program Files'/               msdia80.dll*
 BOOTNXT                   'Program Files (x86)'/         oraclexe/
 BOOTSECT.BAK               ProgramData/                  pagefile.sys
 Boot/                      Recovery/                     sqld/
 CentOS8/                  'System Volume Information'/   sts-bundle/
 Dev/                       Temp/                         swapfile.sys
'Documents and Settings'@   Users/                        web/
 DumpStack.log.tmp          Windows/
 FileTest/                  bootmgr

HOME@DESKTOP-C6S3S5U MINGW64 /c
$ mkdir test
test라는 폴더를 생성
이 폴더는 로컬저장소로 쓰일 것임

HOME@DESKTOP-C6S3S5U MINGW64 /c
$ cd test
해당 폴더 안으로 들어가서

HOME@DESKTOP-C6S3S5U MINGW64 /c/test
$ git config --global user.email "rladmswl1707@gmail.com"
내 이메일 주소를 설정해주고

HOME@DESKTOP-C6S3S5U MINGW64 /c/test
$ git config --global user.name "kimeunji"
깃에서 쓰일 내 이름도 설정해준다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.email=rladmswl1707@gmail.com
user.name=kimeunji
목록을 확인해서 마지막에 user.email과 user.name을 확인한다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test
$ git clone https://github.com/twingtwing/yedamUniv.git
Cloning into 'yedamUniv'...
remote: Enumerating objects: 4261, done.
remote: Counting objects: 100% (4261/4261), done.
remote: Compressing objects: 100% (3347/3347), done.
remote: Total 4261 (delta 819), reused 4231 (delta 808), pack-reused 0
Receiving objects: 100% (4261/4261), 16.73 MiB | 6.79 MiB/s, done.
Resolving deltas: 100% (819/819), done.
Updating files: 100% (3867/3867), done.
그런 후에 클론을 만든다. 
이 작업은 깃에 있는 프로젝트를 최초로 내려받을 때 단 한번만 실행한다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test
$ ls
yedamUniv/
리스트를 확인해서 깃에 있는 프로젝트를 제대로 내려받았는지 확인한다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test
$ cd yedamUniv/
해당 프로젝트 폴더로 들어간다

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (master)
$ git branch eunji
이 폴더 내에선 나도 master!
깃과 로컬저장소를 연결할 브랜치를 생성한다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (master)
$ git branch
  eunji
* master
내가 사용할 수 있는 브랜치 목록을 확인

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (master)
$ git checkout eunji
Switched to branch 'eunji'
eunji라는 브랜치로 접속한다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git pull origin master
From https://github.com/twingtwing/yedamUniv
 * branch            master     -> FETCH_HEAD
Already up to date.
깃 사이트에 마스터가 가지고 있는 최신파일을 다운받는다(pull)

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git status
On branch eunji
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory
        modified:   yedamUniv/src/main/webapp/WEB-INF/example.jsp

no changes added to commit (use "git add" and/or "git commit -a")
현재 내 로컬 깃 상태를 확인한다.
modified: ~ 구문이 빨간색이면 아직 깃에다 push할 준비가 안되었다는 뜻임
(이클립스에서 Unstaged Changes에다 변경된 내역들 좌라락 떠있는거랑 동일함)

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git add *
변경된 데이터를 모두 staged Changes로 추가해준다.
(Unstaged Changes에 있는 변경된 내역을 ++를 클릭해서 staged Changes에다 추가하는 것과 동일)

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git status
On branch eunji
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   yedamUniv/src/main/webapp/WEB-INF/example.jsp
다시 내 로컬 깃 상태를 확인해 보면, modified: ~ 부분이 초록색으로 변경된 걸 확인.
=> push를 위한 준비가 모두 완료된 상태

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git commit -m "두둥탁 은지등장"
[eunji 13d6bab] 두둥탁 은지등장
 1 file changed, 1 insertion(+), 1 deletion(-)
커밋 메시지를 작성해준다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git status
On branch eunji
nothing to commit, working tree clean
다시 로컬 깃 상태를 확인해 보면 아무것도 없다. => 저장완료된 것.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git push origin eunji
Enumerating objects: 15, done.
Counting objects: 100% (15/15), done.
Delta compression using up to 12 threads
Compressing objects: 100% (8/8), done.
Writing objects: 100% (8/8), 825 bytes | 825.00 KiB/s, done.
Total 8 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/twingtwing/yedamUniv.git
   440e293..13d6bab  eunji -> eunji
마지막으로 eunji라는 브랜치로 변경된 내용들을 깃에다 push해준다.

HOME@DESKTOP-C6S3S5U MINGW64 /c/test/yedamUniv (eunji)
$ git branch -d eunji
사용이 끝난 브랜치는 삭제해준다.
